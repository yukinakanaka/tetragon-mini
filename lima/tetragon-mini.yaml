# Change cpu/memory if required
cpus: 8
memory: "16GiB"
images:
  - location: "https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-arm64.img"
    arch: "aarch64"

# macOS Virtualization.Framework(vz) is faster than QUEM: https://lima-vm.io/docs/config/vmtype/
vmType: "vz"
mountType: "virtiofs"

mounts:
  - location: "~"
    writable: true
  - location: "/tmp/lima"
    writable: true

# containerd is managed by Docker, not by Lima, so the values are set to false here.
containerd:
  system: false
  user: false

provision:
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail    
      curl -sL https://apt.llvm.org/llvm.sh | bash -s -- 19 all
      apt update -y
      apt install -y pkg-config libssl-dev
      apt install -y libzstd-dev

      LLVMFILES=/usr/bin/llvm-*
      CLANGFILES=/usr/bin/clang-*
      LLC=/usr/bin/llc-*
      OPT=/usr/bin/opt-*
      for f in $LLVMFILES $CLANGFILES $LLC $OPT
      do
        link=${f::-3}
        echo "linking" $f "to" $link
        ln -s $f $link
      done

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      apt update -y
      apt install -y apt-transport-https ca-certificates curl jq
      apt install -y linux-tools-common linux-tools-$(uname -r)
      apt install -y libelf-dev libcap-dev libpcap-dev libbfd-dev binutils-dev build-essential make
      apt install -y bpfcc-tools
      apt install -y python3-pip
      sysctl -w kernel.bpf_stats_enabled=1
      snap install yq

  - mode: system
    script: |
      #!/bin/bash
      apt install -y ubuntu-dbgsym-keyring
      echo "deb http://ddebs.ubuntu.com $(lsb_release -cs) main restricted universe multiverse
      deb http://ddebs.ubuntu.com $(lsb_release -cs)-updates main restricted universe multiverse
      deb http://ddebs.ubuntu.com $(lsb_release -cs)-proposed main restricted universe multiverse" | \
      tee -a /etc/apt/sources.list.d/ddebs.list
      apt install ubuntu-dbgsym-keyring
      apt update -y
      apt install -y bpftrace-dbgsym

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      apt install -y libbpf-dev
      ln -sf /usr/include/$(uname -m)-linux-gnu/asm /usr/include/asm

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      ln -sf /usr/lib/$(uname -m)-linux-gnu/libbfd.so /usr/lib/libbfd.so

      git clone --recurse-submodules https://github.com/libbpf/bpftool.git
      cd bpftool
      git submodule update --init
      cd src
      make install

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      apt install -y protobuf-compiler libprotobuf-dev
      curl -sSL "https://github.com/fullstorydev/grpcurl/releases/download/v1.9.1/grpcurl_1.9.1_linux_arm64.tar.gz" | tar -xz -C /usr/local/bin

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      curl -fLJ https://github.com/Netflix/bpftop/releases/latest/download/bpftop-aarch64-unknown-linux-gnu -o bpftop && chmod +x bpftop
      mv bpftop /usr/bin/bpftop

  - mode: user
    script: |
      #!/bin/bash
      set -eux -o pipefail
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

  - mode: user
    script: |
      #!/bin/bash
      # https://aya-rs.dev/book/start/development/
      set -eux -o pipefail
      rustup install stable
      rustup toolchain add nightly-2024-11-01
      rustup toolchain install nightly-2024-11-01 --component rust-src
      cargo install cargo-generate
      cargo install --no-default-features bpf-linker@0.9.13
      cargo install bindgen-cli
      cargo install --git https://github.com/aya-rs/aya -- aya-tool

  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      command -v docker >/dev/null 2>&1 && exit 0
      export DEBIAN_FRONTEND=noninteractive
      curl -fsSL https://get.docker.com | sh
      # NOTE: you may remove the lines below, if you prefer to use rootful docker, not rootless
      systemctl disable --now docker
      apt install -y uidmap dbus-user-session

  - mode: user
    script: |
      #!/bin/bash
      set -eux -o pipefail
      systemctl --user start dbus
      dockerd-rootless-setuptool.sh install
      docker context use rootless

probes:
  - description: "bpftool to be installed"
    script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 30s bash -c "until command -v bpftool >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "bpftool is not installed yet"
        exit 1
      fi
    hint: See "/var/log/cloud-init-output.log". in the guest

  - description: "aya-tool to be installed"
    script: |
      #!/bin/bash
      set -eux -o pipefail
      sudo su - $USER
      if ! timeout 30s bash -c "until command -v aya-tool >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "aya-tool is not installed yet"
        exit 1
      fi

  - description: "docker to be installed"
    script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 30s bash -c "until command -v docker >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "docker is not installed yet"
        exit 1
      fi
    hint: See "/var/log/cloud-init-output.log". in the guest
